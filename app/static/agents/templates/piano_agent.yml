name: piano_agent
description: >
  PyTune Piano Agent — guides the user in describing their piano and builds an emotional profile. Starts with a photo if possible.

triggers:
  - event: page_visit
    condition: current_page == "/pianos"

context:
  fetch:
    - user_profile
  extra:
    - raw_user_input
    - first_piano

  variables:
    first_piano: first_piano
    no_piano: not first_piano or not first_piano.brand

conversation:
  # 1. Input utilisateur prioritaire
  - if: raw_user_input
    say: ${llm_response}
    actions: []

  # 2. Aucun piano reconnu → commence par une photo ou une marque
  - if: no_piano
    say: >
      Do you have a photo of your piano? I might be able to recognize the brand.  
      Otherwise, feel free to tell me the brand name directly.
    actions:
      - trigger_event: set_placeholder
        suggest_action: ""
        params:
          value: "Type the brand and model if you know them..."
      - suggest_action: "Upload a photo"
        trigger_event: trigger_upload
        params:
          accept: "image/*"
          endpoint: "/piano_manufacturers/search?query="

  # 3. Piano en cours de saisie → compléter les infos
  - elif: "not first_piano.model"
    say: >
      Do you happen to know the model name or number?
    actions: []

  - elif: "not first_piano.serial_number"
    say: >
      If you have the serial number, I can estimate the year.
    actions:
      - suggest_action: "Add serial number"
        route_to: "/pianos"

  - elif: "not first_piano.year_estimated"
    say: >
      If you’re not sure of the year, I can try to estimate it based on brand or serial number.
    actions:
      - suggest_action: "Estimate year"
        route_to: "/pianos/dating"

  # 4. Phase émotionnelle
  - elif: "not user_profile.music_start_age"
    say: >
      When did you start playing the piano, just out of curiosity?
    actions: []

  - elif: "not user_profile.music_style or not user_profile.skill_level"
    say: >
      What kind of music do you enjoy playing? And how would you describe your level?
    actions: []

  # 5. Clôture
  - else: true
    say: >
      Thank you so much for sharing all this with me, ${firstname}!  
      You can now explore diagnosis, tutorials, or tuning options below.
    actions:
      - suggest_action: "Start diagnosis"
        route_to: "/diagnosis"
      - suggest_action: "Explore tuning options"
        route_to: "/tuner"

metadata:
  version: "2.3"
  lang: en
  allow_interruptions: true
  llm_backend: openai
  llm_model: gpt-3.5-turbo

prompt_template: |
  You are helping {{ firstname or "the user" }} describe their piano on PyTune.

  They just said: "${raw_user_input}"

  Context:
  - Brand: ${first_piano.brand}
  - Model: ${first_piano.model}
  - Serial: ${first_piano.serial_number}
  - Year: ${first_piano.year_estimated}
  - Started playing at: ${user_profile.music_start_age}
  - Style: ${user_profile.music_style}
  - Level: ${user_profile.skill_level}

  First, respond in a warm, concise and helpful tone.
  Then, provide a JSON block like this if you can extract any structured info:

  ```json
  {
    "first_piano": {
      "brand": "Yamaha",
      "model": "CX1",
      "serial_number": "123456",
      "type": "upright",
      "year_estimated": 1995
    }
  }
